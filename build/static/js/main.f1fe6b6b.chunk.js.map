{"version":3,"sources":["BooksAPI.js","BookShelf.js","Main.js","Search.js","App.js","index.js"],"names":["api","token","localStorage","Math","random","toString","substr","headers","Accept","Authorization","update","book","shelf","fetch","concat","id","method","_objectSpread","Content-Type","body","JSON","stringify","then","res","json","search","query","data","books","BookShelf","_Component","_classCallCheck","this","_possibleConstructorReturn","_getPrototypeOf","apply","arguments","_inherits","_createClass","key","value","_this$props","props","onUpdateShelves","React","createElement","className","map","style","width","height","backgroundImage","imageLinks","thumbnail","defaultValue","onChange","event","target","disabled","title","authors","join","Component","Main","shelves","filter","Link","to","Search","_getPrototypeOf2","_this","_len","length","args","Array","_key","call","state","showingBooks","updateQuery","setState","setTimeout","BooksAPI","queryBooks","isArray","updatedBooks","propsBooks","find","b","_this2","_this$state","type","placeholder","BooksApp","_React$Component","removeBook","currentState","updateShelves","addBookToShelf","foundBook","bk","_this3","Route","exact","path","render","ReactDOM","BrowserRouter","App","document","getElementById"],"mappings":"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","file":"static/js/main.f1fe6b6b.chunk.js","sourcesContent":["\nconst api = \"https://reactnd-books-api.udacity.com\"\n\n\n// Generate a unique token for storing your bookshelf data on the backend server.\nlet token = localStorage.token\nif (!token)\n  token = localStorage.token = Math.random().toString(36).substr(-8)\n\nconst headers = {\n  'Accept': 'application/json',\n  'Authorization': token\n}\n\nexport const get = (bookId) =>\n  fetch(`${api}/books/${bookId}`, { headers })\n    .then(res => res.json())\n    .then(data => data.book)\n\nexport const getAll = () =>\n  fetch(`${api}/books`, { headers })\n    .then(res => res.json())\n    .then(data => data.books)\n\nexport const update = (book, shelf) =>\n  fetch(`${api}/books/${book.id}`, {\n    method: 'PUT',\n    headers: {\n      ...headers,\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({ shelf })\n  }).then(res => res.json())\n\nexport const search = (query) =>\n  fetch(`${api}/search`, {\n    method: 'POST',\n    headers: {\n      ...headers,\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({ query })\n  }).then(res => res.json())\n    .then(data => data.books)\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\n\nclass BookShelf extends Component {\n  static propTypes = {\n    books: PropTypes.array.isRequired,\n    onUpdateShelves: PropTypes.func,\n  };\n\n  render() {\n    const { books, onUpdateShelves } = this.props;\n    return (\n      <ol className=\"books-grid\">\n        {books.map((book) => (\n          <li key={book.id}>\n            <div className=\"book\">\n              <div className=\"book-top\">\n                <div\n                  className=\"book-cover\"\n                  style={{\n                    width: 128,\n                    height: 193,\n                    backgroundImage: `url(${\n                      book.imageLinks && book.imageLinks.thumbnail\n                        ? book.imageLinks.thumbnail\n                        : \"\"\n                    })`,\n                  }}\n                />\n                <div className=\"book-shelf-changer\">\n                  <select\n                    defaultValue={book.shelf || \"none\"}\n                    onChange={(event) =>\n                      onUpdateShelves(book, event.target.value)\n                    }\n                  >\n                    <option disabled>Move to...</option>\n                    <option value=\"currentlyReading\">Currently Reading</option>\n                    <option value=\"wantToRead\">Want to Read</option>\n                    <option value=\"read\">Read</option>\n                    <option value=\"none\">None</option>\n                  </select>\n                </div>\n              </div>\n              <div className=\"book-title\">\n                {book.title ? book.title : \"This book has no title\"}\n              </div>\n              <div className=\"book-authors\">\n                {book.authors\n                  ? book.authors.join(\", \")\n                  : \"This book has no author\"}\n              </div>\n            </div>\n          </li>\n        ))}\n      </ol>\n    );\n  }\n}\n\nexport default BookShelf;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport BookShelf from \"./BookShelf\";\n\nfunction Main(props) {\n  const { books, onUpdateShelves } = props;\n\n  const currentlyReadingBooks = books.filter(\n    (book) => book.shelf === \"currentlyReading\"\n  );\n  const wantToReadBooks = books.filter((book) => book.shelf === \"wantToRead\");\n  const readBooks = books.filter((book) => book.shelf === \"read\");\n  const shelves = [\n    { title: \"Currently Reading\", key: currentlyReadingBooks },\n    { title: \"Want To Read\", key: wantToReadBooks },\n    { title: \"Read\", key: readBooks },\n  ];\n\n  return (\n    <div className=\"list-books\">\n      <div className=\"list-books-title\">\n        <h1>MyReads</h1>\n      </div>\n      <div className=\"list-books-content\">\n        {shelves.map((shelf) => (\n          <div className=\"bookshelf\" key={shelf.title}>\n            <h2 className=\"bookshelf-title\">{shelf.title}</h2>\n            <div className=\"bookshelf-books\">\n              <BookShelf books={shelf.key} onUpdateShelves={onUpdateShelves} />\n            </div>\n          </div>\n        ))}\n      </div>\n      <div className=\"open-search\">\n        <Link id=\"add-button\" to=\"/search\" className=\"search-books\">\n          Search Books\n        </Link>\n      </div>\n    </div>\n  );\n}\n\nexport default Main;\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport BookShelf from \"./BookShelf\";\nimport * as BooksAPI from \"./BooksAPI\";\n\nclass Search extends Component {\n  state = {\n    query: \"\",\n    showingBooks: [],\n  };\n\n  updateQuery = (query) => {\n    this.setState(() => ({\n      query: query,\n    }));\n    setTimeout(() => {\n      BooksAPI.search(query).then((queryBooks) => {\n        if (query === \"\" || !Array.isArray(queryBooks)) {\n          this.setState({\n            showingBooks: [],\n          });\n        } else {\n          const updatedBooks = queryBooks.map((book) => {\n            const propsBooks = this.props.books.find((b) => b.id === book.id);\n            if (propsBooks) {\n              book.shelf = propsBooks.shelf;\n            }\n            return book;\n          });\n          this.setState({\n            showingBooks: updatedBooks,\n          });\n        }\n      }, 300);\n    });\n  };\n\n  render() {\n    const { query, showingBooks } = this.state;\n    const { onUpdateShelves } = this.props;\n    return (\n      <div className=\"search-books\">\n        <div className=\"search-books-bar\">\n          <Link to=\"/\" className=\"close-search\">\n            Search Books\n          </Link>\n          <div className=\"search-books-input-wrapper\">\n            <input\n              type=\"text\"\n              placeholder=\"Search by title or author\"\n              value={query}\n              onChange={(event) => this.updateQuery(event.target.value)}\n            />\n          </div>\n        </div>\n        <div>\n          {this.state.showingBooks.length > 0 &&\n            this.state.query.length > 1 && (\n              <BookShelf\n                books={showingBooks}\n                onUpdateShelves={onUpdateShelves}\n              />\n            )}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Search;\n","import React from \"react\";\nimport * as BooksAPI from \"./BooksAPI\";\nimport \"./App.css\";\nimport Main from \"./Main\";\nimport Search from \"./Search\";\nimport { Route } from \"react-router-dom\";\n\nclass BooksApp extends React.Component {\n  state = {\n    books: [],\n  };\n\n  componentDidMount() {\n    BooksAPI.getAll().then((books) => {\n      this.setState(() => ({\n        books,\n      }));\n    });\n  }\n\n  removeBook = (book, shelf) => {\n    this.setState((currentState) => ({\n      books: currentState.books.filter((b) => {\n        return b.id !== book.id;\n      }),\n    }));\n    BooksAPI.update(book, shelf);\n  };\n\n  updateShelves = (book, shelf) => {\n    if (shelf === \"none\") {\n      this.removeBook(book, shelf);\n    } else {\n      BooksAPI.update(book, shelf).then(() => {\n        this.setState((currentState) => ({\n          books: currentState.books.map((b) =>\n            b.id === book.id ? { ...b, shelf: shelf } : b\n          ),\n        }));\n      });\n    }\n  };\n\n  addBookToShelf = (book, shelf) => {\n    book.shelf = shelf;\n    let foundBook = this.state.books.find((b) => b[\"id\"] === book.id);\n    let bk = this.state.books;\n    if (!foundBook) {\n      this.setState({ books: bk.concat(book) });\n      this.updateShelves(book, shelf);\n    }\n  };\n\n  render() {\n    return (\n      <div className=\"app\">\n        <Route\n          exact\n          path=\"/\"\n          render={() => (\n            <Main\n              books={this.state.books}\n              onUpdateShelves={this.updateShelves}\n            />\n          )}\n        />\n        <Route\n          path=\"/search\"\n          render={() => (\n            <Search\n              books={this.state.books}\n              onUpdateShelves={this.addBookToShelf}\n            />\n          )}\n        />\n      </div>\n    );\n  }\n}\n\nexport default BooksApp;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}